{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","Component","constructor","props","super","updateInput","value","field","this","setState","addItem","content","state","trim","axios","post","then","response","prevState","list","data","catch","error","console","deleteItem","id","delete","filter","item","editItem","find","editedContent","prompt","put","map","completeItem","completedItem","completedList","componentDidMount","get","todo","isdone","render","React","createElement","Container","Row","style","display","justifyContent","alignItems","fontSize","fontWeight","Col","md","span","className","ListGroup","Item","key","variant","offset","InputGroup","FormControl","placeholder","size","onChange","e","target","aria-label","aria-describedby","Button","onClick","action","marginRight","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.40ac5811.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      list: [],\n      completedList: [],\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8000/api/todos\")\n      .then(response => {\n        this.setState({\n          list: response.data.filter(todo => !todo.isdone),\n          completedList: response.data.filter(todo => todo.isdone),\n        });\n      })\n      .catch(error => console.error(\"Error fetching todos:\", error));\n  }\n\n  updateInput = (value, field) => {\n    this.setState({ [field]: value });\n  };\n\n  addItem = () => {\n    const { content } = this.state;\n    if (!content.trim()) return;\n\n    axios.post(\"http://localhost:8000/api/todos\", { content: content.trim() })\n      .then(response => {\n        this.setState(prevState => ({\n          list: [...prevState.list, response.data],\n          content: \"\",\n        }));\n      })\n      .catch(error => console.error(\"Error adding todo:\", error));\n  };\n\n  deleteItem = (id) => {\n    axios.delete(`http://localhost:8000/api/todos/${id}`)\n      .then(() => {\n        this.setState(prevState => ({\n          list: prevState.list.filter(item => item.id !== id),\n        }));\n      })\n      .catch(error => console.error(\"Error deleting todo:\", error));\n  };\n\n  editItem = (id) => {\n    const { list } = this.state;\n    const item = list.find(item => item.id === id);\n    if (!item) return;\n\n    const editedContent = prompt(\"Sửa công việc:\", item.content);\n    if (editedContent && editedContent.trim()) {\n      axios.put(`http://localhost:8000/api/todos/${id}`, {\n        content: editedContent.trim(),\n      })\n        .then(response => {\n          this.setState(prevState => ({\n            list: prevState.list.map(item =>\n              item.id === id ? { ...item, content: response.data.content } : item\n            ),\n          }));\n        })\n        .catch(error => console.error(\"Error editing todo:\", error));\n    }\n  };\n\n  completeItem = (id) => {\n    axios.put(`http://localhost:8000/api/todos/${id}/complete`)\n      .then(response => {\n        this.setState(prevState => {\n          const completedItem = response.data;\n          return {\n            list: prevState.list.filter(item => item.id !== id),\n            completedList: [...prevState.completedList, completedItem],\n          };\n        });\n      })\n      .catch(error => console.error(\"Error completing todo:\", error));\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", fontSize: \"3rem\", fontWeight: \"bolder\" }}>\n          TODO LIST\n        </Row>\n        <hr />\n        <Row>\n          <Col md={{ span: 2 }} className=\"bg-dark text-white p-3\">\n            <h5>Công việc đã hoàn thành</h5>\n            <ListGroup>\n              {this.state.completedList.map((item) => (\n                <ListGroup.Item key={item.id} variant=\"success\">\n                  {item.content}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col md={{ span: 6, offset: 1 }}>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                placeholder=\"Thêm công việc . . . \"\n                size=\"lg\"\n                value={this.state.content}\n                onChange={(e) => this.updateInput(e.target.value, 'content')}\n                aria-label=\"Thêm công việc\"\n                aria-describedby=\"basic-addon2\"\n              />\n              <InputGroup>\n                <Button variant=\"dark\" className=\"mt-2\" onClick={this.addItem}>Thêm</Button>\n              </InputGroup>\n            </InputGroup>\n            <ListGroup>\n              {this.state.list.map((item) => (\n                <ListGroup.Item key={item.id} variant=\"dark\" action style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                  {item.content}\n                  <div>\n                    <Button variant=\"light\" style={{ marginRight: \"10px\" }} onClick={() => this.deleteItem(item.id)}>Xóa</Button>\n                    <Button variant=\"light\" style={{ marginRight: \"10px\" }} onClick={() => this.editItem(item.id)}>Sửa</Button>\n                    <Button variant=\"light\" onClick={() => this.completeItem(item.id)}>Xong</Button>\n                  </div>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}